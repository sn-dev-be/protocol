// Copyright © 2023 OpenIM. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";
package OpenIMServer.club;
import "sdkws/sdkws.proto";
// import "wrapperspb/wrapperspb.proto";
option go_package = "github.com/OpenIMSDK/protocol/club";

message RoleAuth {
	string manageServer = 1;          
	string shareServer = 2;           
	string manageMember = 3;          
	string sendMsg = 4;        
	string manageMsg = 5;     
	string manageCommunity = 6;  
	string postTweet = 7;
	string tweetReply = 8;
	string manageGroupCategory = 9;
	string manageGroup = 10;
 }

message CreateServerReq {
  string serverID = 1;
  string serverName = 2;
  string icon = 3;
  string description = 4;
  string banner = 5;
  int32 applyMode = 6;
  int32 inviteMode = 7;
  int32 searchable = 8;
  int32 userMutualAccessible = 9;
  int32 status = 10;
  string ownerUserID = 11;
  string ex = 12;
}

message CreateServerResp {}

message CreateGroupCategoryReq {
  string serverID = 1;
  string categoryName = 2;
  string ownerUserID  = 3;

}

message CreateGroupCategoryResp {}


message GetServerRecommendedListReq {
}
message GetServerRecommendecListResp {
  repeated sdkws.ServerFullInfo servers = 1;
}

message GetJoinedServerListReq{
  string userID = 1;
}
message GetJoinedServerListResp{
  repeated sdkws.ServersListInfo servers = 1;
}

message GetServerDetailsReq {
  string serverID = 1;
}
message GetServerDetailsResp {
  sdkws.ServerFullInfo server = 1;
  repeated sdkws.GroupCategoryListInfo categoryList =2;
  bool joined = 3;
}

message DeleteServerReq {
  repeated string serverIDList = 1;
}
message DeleteServerResp {
}

message JoinServerReq{
  string serverID = 1;
  string reqMessage = 2;
  int32 joinSource = 3;
  string userID = 4;
  string invitedUserID = 5;
}
message JoinServerResp{}

message QuitServerReq{
  string serverID = 1;
  string userID = 2;
}
message QuitServerResp{}

service club {
  // 创建部落
  rpc createServer(CreateServerReq) returns (CreateServerResp);
  //获取部落列表
  rpc getServerRecommendedList(GetServerRecommendedListReq) returns (GetServerRecommendecListResp);
  //获取加入的部落列表
  rpc getJoinedServerList(GetJoinedServerListReq) returns(GetJoinedServerListResp);
  //获取部落详情
  rpc getServerDetails(GetServerDetailsReq) returns (GetServerDetailsResp);
  //加入部落
  rpc joinServer(JoinServerReq) returns (JoinServerResp);
  //退出部落
  rpc quitServer(QuitServerReq) returns(QuitServerResp);
  //删除部落
  rpc batchDeleteServers(DeleteServerReq) returns (DeleteServerResp);
  // 创建分组
  rpc createGroupCategory(CreateGroupCategoryReq) returns (CreateGroupCategoryResp);
}
